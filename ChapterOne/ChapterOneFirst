#include<stdio.h>
#include<string.h>
#define LEN 4
#pragma warning(disable:4996

/*
输入命题运算式
输出结果
*/

//否定运算
int negative(char p) {
	if (p == '1')return 0;
	else return 1;
}
//合取运算
int conjunction(int p, int q) {
	if (p == 1 & q == 1) return 1;
	else return 0;
}
int extract(int p, int q) {
	if (p == 0 & q == 0) return 0;
	else return 1;
}
int repel(int p, int q) {
	if ((p == 1 & q == 0) || (p == 0 & q == 1)) return 1;
	else return 0;
}
int condition(int p, int q) {
	if (p == 1 & q == 0) return 0;
	else return 1;
}
int dou_condition(int p, int q) {
	if (p == q) return 1;
	else return 0;
}
int main() {
	int p, q;
	int i = 1;
	char str[LEN];
	while (i) {
	printf("请输入要运算的算式\n 否定'!' \t合取'&' \t析取'~'");
	printf("\n排斥或'^' \t条件'>' \t双条件'='\n");
	
		
		scanf("%s", str);//接收输入的运算式
		if (str[0] == '!') {
			printf("\n%d", negative(str[1]));
		}
		else {
			printf("\n");
			p = str[0] - '0';
			q = str[2] - '0';
			switch (str[1])
			{
			case '&':printf("%d", conjunction(p, q));break;
			case '~':printf("%d", extract(p, q));break;
			case '^':printf("%d", repel(p, q));break;
			case '>':printf("%d", condition(p, q));break;
			case '=':printf("%d", dou_condition(p, q));break;
			default:printf("输入有误");
				break;
			}

		}
		printf("\n再来一次 yes 1/no 0: ");
		putchar('\n');
		if (getchar() == '1') i = 1;
		else i = 0;
	}
	printf("程序结束");

	return 0;
}
